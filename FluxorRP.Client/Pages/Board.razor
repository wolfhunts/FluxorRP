@page "/"
@using Fluxor
@using FluxorRP.Shared.Store.Dice
@rendermode InteractiveWebAssembly
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject NavigationManager navigationManager
@inject IState<DiceState> DiceState

<PageTitle>Party</PageTitle>

@if (!EndOfGame)
{<div class="columns-container">
    <div class="column">
            <FluxorRP.Client.Component.Character />
    </div>
    <div class="column">
            <FluxorRP.Client.Component.DiceLauncher />
    </div>
    <div class="column">
            <FluxorRP.Client.Component.Monster />
    </div>
</div>
   
    
   
} else
{
    <div>
        <strong>end of game</strong>
    </div>

    <div>
        @if (this.MonsterHealth > 0)
        {
            <strong>Monster Wins</strong>
        }
        else
        {
            <strong>Player Wins</strong>
        }
    </div>
    <div>
        <img src="images/gameover.gif" />
    </div>
    <button @onclick="Restart">Jouer à nouveau</button>
}


@code {
    public int Health { get; set; } = 0;
    public int MonsterHealth { get; set; } = 100;
    public bool EndOfGame { get; set; } = false;

    private void Restart()
    {
        navigationManager.NavigateTo(navigationManager.Uri, true);
    }

    private void UpdateDiceValue(int newValue)
    {
        this.Health += newValue;

        Console.WriteLine(newValue.ToString());
    }

    private void AttackMonster(int attachValue)
    {
        this.MonsterHealth -= attachValue;
        this.Health -= attachValue / 2;

        this.EndOfGame = this.MonsterHealth < 0 || this.Health < 0;
    }
}
