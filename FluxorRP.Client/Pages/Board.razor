@page "/"
@using Fluxor
@using FluxorRP.Shared.Store.Board
@using FluxorRP.Shared.Store.CaptainSwordee
@rendermode InteractiveWebAssembly
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject NavigationManager navigationManager
@inject IState<BoardState> BoardState
@inject IState<GifState> GifState

@using FluxorRP.Shared.Store.ListCharacter
@using FluxorRP.Shared.Store.ListMonster

@inject IDispatcher Dispatcher
@inject IState<ListCharacterState> CharactersState
@inject IState<ListMonsterState> MonstersState


<PageTitle>Party</PageTitle>

@if (!BoardState.Value.end)
{
    @if (CharactersState.Value.selectedValue != 0 && MonstersState.Value.selectedValue != 0)
    {
        <div class="columns-container">
            <div class="column">
                    <FluxorRP.Client.Component.Character />
            </div>
            <div class="column">
                    <FluxorRP.Client.Component.DiceLauncher />
            </div>
            <div class="column">
                    <FluxorRP.Client.Component.Monster />
            </div>
        
        </div>
        @if (@GifState.Value.IsImageVisible)
        {
            <div class="column">
                <img src="images/gameover.gif" />
            </div>
        }
    }
    else
    {
        <div class="column">
            @foreach (var Character in CharactersState.Value.Characters)
            {
                <div class="form-check">
                    <input class="form-check-check" value="@Character.Id" type="checkbox" @onclick="() => SelectCharacter(Character.Id)"
                           checked="@(CharactersState.Value.selectedValue == Character.Id)"></input>
                    <label class="form-check-label">@Character.Name</label>
                </div>
            }
        </div>
        <div class="column">
            @foreach (var Monster in MonstersState.Value.Monsters)
            {
                <div class="form-check">
                    <input class="form-check-check" value="@Monster.Id" type="checkbox" @onclick="() => SelectMonster(Monster.Id)"
                           checked="@(MonstersState.Value.selectedValue == Monster.Id)"></input>
                    <label class="form-check-label">@Monster.Name</label>
                </div>
            }
        </div>
    }

} 
else
{
    <div>
        <strong>end of game</strong>
    </div>

    <div>
        @if (BoardState.Value.isPlayerWinner)
        {
            <strong>Player Wins</strong>
        }
        else
        {
            <strong>Monster Wins</strong>
        }
    </div>
    <div>
        <img src="images/dance.gif" />
    </div>
    <button @onclick="Restart">Jouer à nouveau</button>
}


@code {

    private void Restart()
    {
        navigationManager.NavigateTo(navigationManager.Uri, true);
    }
    private void SelectCharacter(int id)
    {
        Dispatcher.Dispatch(new ListCharacterSelectAction(id));
    }
    private void SelectMonster(int id)
    {
        Dispatcher.Dispatch(new ListMonsterSelectAction(id));
    }
}
